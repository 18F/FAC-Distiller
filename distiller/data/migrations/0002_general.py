# Generated by Django 3.0.2 on 2020-01-18 01:50

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='General',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audit_year', models.DecimalField(decimal_places=0, help_text='Audit Year and DBKEY (database key) combined make up the primary key.', max_digits=4)),
                ('dbkey', models.CharField(help_text='Audit Year and DBKEY (database key) combined make up the primary key.', max_length=6)),
                ('type_of_entity', models.CharField(blank=True, help_text='Contact FAC for information', max_length=1000, null=True)),
                ('fy_end_date', models.DateField(help_text='Fiscal Year End Date')),
                ('audit_type', models.CharField(blank=True, help_text='Type of Audit', max_length=32, null=True)),
                ('period_covered', models.CharField(help_text='Audit Period Covered by Audit', max_length=16)),
                ('number_months', models.IntegerField(help_text="Number of Months Covered by the 'Other' Audit Period", null=True)),
                ('ein', models.CharField(help_text='Primary Employer Identification Number', max_length=9)),
                ('multiple_eins', models.BooleanField(help_text='Identifies if the Submission Contains Multiple EINs', null=True)),
                ('ein_subcode', models.CharField(blank=True, help_text='Subcode assigned to the EIN', max_length=3, null=True)),
                ('duns', models.CharField(blank=True, help_text='Primary Data Universal Numbering System Number', max_length=9, null=True)),
                ('multiple_duns', models.BooleanField(help_text='Identifies if the Submission Contains Multiple DUNS', null=True)),
                ('auditee_name', models.CharField(help_text='Name of the Auditee', max_length=70)),
                ('street1', models.CharField(blank=True, help_text='Auditee Street Address', max_length=45, null=True)),
                ('street2', models.CharField(blank=True, help_text='Auditee Street Address', max_length=45, null=True)),
                ('city', models.CharField(blank=True, help_text='Auditee City', max_length=30, null=True)),
                ('state', models.CharField(blank=True, help_text='Auditee State', max_length=2, null=True)),
                ('zipcode', models.CharField(blank=True, help_text='Auditee Zipcode', max_length=9, null=True)),
                ('auditee_contact', models.CharField(blank=True, help_text='Name of Auditee Contact', max_length=50, null=True)),
                ('auditee_title', models.CharField(blank=True, help_text='Title of Auditee Contact', max_length=40, null=True)),
                ('auditee_phone', models.CharField(blank=True, help_text='Auditee Phone Number', max_length=10, null=True)),
                ('auditee_fax', models.CharField(blank=True, help_text='Auditee Fax Number (optional)', max_length=10, null=True)),
                ('auditee_email', models.CharField(blank=True, help_text='Auditee Email address', max_length=60, null=True)),
                ('auditee_date_signed', models.DateField(blank=True, help_text='Date of auditee signature', null=True)),
                ('auditee_name_title', models.CharField(blank=True, help_text='Title of Auditee Certifying Official', max_length=70, null=True)),
                ('cpa_firm_name', models.CharField(blank=True, help_text='CPA Firm Name', max_length=64, null=True)),
                ('auditor_ein', models.CharField(blank=True, help_text='CPA Firm EIN (only available for audit years 2013 and beyond)', max_length=9, null=True)),
                ('cpa_street1', models.CharField(blank=True, help_text='CPA Street Address', max_length=45, null=True)),
                ('cpa_street2', models.CharField(blank=True, help_text='CPA Street Address', max_length=45, null=True)),
                ('cpa_city', models.CharField(blank=True, help_text='CPA City', max_length=30, null=True)),
                ('cpa_state', models.CharField(blank=True, help_text='CPA State', max_length=2, null=True)),
                ('cpa_zipcode', models.CharField(blank=True, help_text='CPA Zip Code', max_length=9, null=True)),
                ('cpa_contact', models.CharField(blank=True, help_text='Name of CPA Contact', max_length=50, null=True)),
                ('cpa_title', models.CharField(blank=True, help_text='Title of CPA Contact', max_length=40, null=True)),
                ('cpa_phone', models.CharField(blank=True, help_text='CPA phone number', max_length=10, null=True)),
                ('cpa_fax', models.CharField(blank=True, help_text='CPA fax number (optional)', max_length=10, null=True)),
                ('cpa_email', models.CharField(blank=True, help_text='CPA email address', max_length=60, null=True)),
                ('cpa_date_signed', models.DateField(blank=True, help_text='Date of CPA signature', null=True)),
                ('multiple_cpas', models.BooleanField(help_text='Identifies if the Submission Contains Multiple CPAs', null=True)),
                ('cog_over', models.CharField(blank=True, max_length=128, null=True)),
                ('cog_agency', models.CharField(blank=True, help_text='Two digit Federal agency prefix of the cognizant agency', max_length=2, null=True)),
                ('oversight_agency', models.CharField(blank=True, help_text='Two digit Federal agency prefix of the oversight agency', max_length=2, null=True)),
                ('typereport_fs', models.CharField(blank=True, help_text='Type of Report Issued on the Financial Statements', max_length=1000, null=True)),
                ('sp_framework', models.CharField(blank=True, help_text='Special Purpose Framework that was used as the basis of accounting', max_length=1000, null=True)),
                ('sp_framework_required', models.BooleanField(help_text='Indicate whether or not the special purpose framework used as basis of accounting by state law or tribal law', null=True)),
                ('typereport_sp_framework', models.CharField(blank=True, choices=[('U', 'Unqualifed'), ('Q', 'Qualified'), ('A', 'Adverse'), ('D', 'Disclaimer')], help_text="The auditor's opinion on the special purpose framework", max_length=16, null=True)),
                ('going_concern', models.BooleanField(help_text='Whether or not the audit contained a going concern paragraph on financial statements', null=True)),
                ('reportable_condition', models.BooleanField(help_text='Whether or not the audit disclosed a reportable condition/significant deficiency on financial statements', null=True)),
                ('material_weakness', models.BooleanField(help_text='Whether or not the audit disclosed any reportable condition/significant deficiency as a material weakness on financial statements', null=True)),
                ('material_noncompliance', models.BooleanField(help_text='Whether or not the audit disclosed a material noncompliance on financial statements', null=True)),
                ('typereport_mp', models.CharField(blank=True, choices=[('U', 'Unqualifed'), ('Q', 'Qualified'), ('A', 'Adverse'), ('D', 'Disclaimer')], help_text='Type of Report Issued on the Major Program Compliance', max_length=16, null=True)),
                ('dup_reports', models.BooleanField(help_text='Whether or not the financial statements include departments that have separate expenditures not included in this audit', null=True)),
                ('dollar_threshold', models.CharField(blank=True, help_text='Dollar Threshold to distinguish between Type A and Type B programs.', max_length=12, null=True)),
                ('low_risk', models.BooleanField(help_text='Indicate whether or not the auditee qualified as a low-risk auditee', null=True)),
                ('reportable_condition_mp', models.BooleanField(help_text='Whether or not the audit disclosed a reportable condition/significant deficiency for any major program in the Schedule of Findings and Questioned Costs', null=True)),
                ('material_weakness_mp', models.BooleanField(help_text='Indicate whether any reportable condition/signficant deficiency was disclosed as a material weakness for a major program in the Schedule of Findings and Questioned Costs', null=True)),
                ('qcosts', models.BooleanField(help_text='Indicate whether or not the audit disclosed any known questioned costs.', null=True)),
                ('cy_findings', models.BooleanField(help_text='Indicate whether or not current year findings or prior year findings affecting direct funds were reported', null=True)),
                ('py_schedule', models.BooleanField(help_text='Indicate whether or not the report includes a Summary Schedule of Prior Year Audit Findings', null=True)),
                ('tot_fed_expend', models.CharField(help_text='Total Federal Expenditures', max_length=12)),
                ('date_firewall', models.DateField()),
                ('previous_date_firewall', models.DateField(blank=True, null=True)),
                ('report_required', models.BooleanField(help_text='Distribution to Federal Agency required?', null=True)),
                ('fac_accepted_date', models.DateField(blank=True, help_text='The most recent date an audit report was submitted to the FAC that passed FAC screening and was accepted as a valid OMB Circular A-133 report submission.', null=True)),
                ('cpa_foreign', models.CharField(blank=True, help_text='CPA Address (if international)', max_length=200, null=True)),
                ('cpa_country', models.CharField(blank=True, help_text='CPA Country', max_length=16, null=True)),
            ],
        ),
    ]
