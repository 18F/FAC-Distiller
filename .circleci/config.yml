version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7
        environment:
          TZ: America/New_York
          PIPENV_VENV_IN_PROJECT: "TRUE"
          DATABASE_URL: postgresql://postgres@localhost/distiller_test?sslmode=disable
      - image: circleci/postgres:12
        environment:
          POSTGRES_DB: distiller_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-pipenv-{{ checksum "Pipfile.lock" }}
            - v2-pipenv-
      - run:
          name: install dependencies
          command: |
            pip install pipenv
            pipenv install --dev
      - save_cache:
          key: v2-pipenv-{{ checksum "Pipfile.lock" }}
          paths:
            - ./.venv
      - run:
          name: run tests
          command: |
            pipenv run pytest

  update_tables:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: install cf-cli
          command: |
            sudo apt-get update
            sudo apt-get install wget gnupg2 apt-transport-https
            wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
            echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
            sudo apt-get update
            sudo apt-get install cf-cli
      - run:
          name: run daily update
          no_output_timeout: 1h
          command: |
            if [ -z "$CF_SPACE" ] ; then
              echo CF_SPACE not set, aborting
              exit 1
            fi
            if [ -z "$CF_ORG" ] ; then
              echo CF_ORG not set, aborting
              exit 1
            fi
            cf api https://api.fr.cloud.gov
            cf auth "$CF_USERNAME" "$CF_PASSWORD"
            cf target -o "$CF_ORG" -s "$CF_SPACE"
            cf run-task demo-fac-distiller "python manage.py download_table --all && python manage.py load_table --all"
      - persist_to_workspace:
          root: .
          paths:
            - ./*

workflows:
  version: 2
  commit:
    jobs:
      - build
      - update_tables

  nightly:
    triggers:
      - schedule:
          # this should be in the middle of the night for most everybody in the US
          cron: "45 2 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - update_tables
